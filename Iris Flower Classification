# Step 1: Import libraries
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, accuracy_score, confusion_matrix
import seaborn as sns

# Step 2: Load dataset
df = pd.read_csv("/content/Iris.csv")

# Step 3: Explore data
print(df.head())
print(df.info())
print(df.describe())

# Step 4: Encode species labels (from text to numbers)
label_encoder = LabelEncoder()
df['species'] = label_encoder.fit_transform(df['species'])

# Step 5: Split features (X) and target (y)
X = df.drop('species', axis=1)  # Features: sepal_length, sepal_width, petal_length, petal_width
y = df['species']               # Target: species

# Step 6: Train-Test Split (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 7: Create and train the model
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

# Step 8: Predictions
y_pred = model.predict(X_test)

# Step 9: Model evaluation
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# Step 10: Confusion matrix visualization
cm = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(6,4))
sns.heatmap(cm, annot=True, fmt="d", cmap="Blues",
            xticklabels=label_encoder.classes_,
            yticklabels=label_encoder.classes_)
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Iris Flower Classification Confusion Matrix")
plt.show()
